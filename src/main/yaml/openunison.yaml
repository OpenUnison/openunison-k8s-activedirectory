# ActiveMQ
apiVersion: v1
kind: Service
metadata:
  labels:
    app: amq
  name: amq
  namespace: openunison
spec:
  ports:
  - name: amq-openwire
    port: 61616
    protocol: TCP
    targetPort: 61616
  - name: amq-admin
    port: 8162
    protocol: TCP
    targetPort: 8162
  selector:
    app: amq
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: amq
  name: amq
  namespace: openunison
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: amq
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: amq
    spec:
      containers:
      - env:
        - name: JAVA_OPTS
          value: -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom
        - name: JDBC_DRIVER
          valueFrom:
            secretKeyRef:
              name: amq-env-secrets
              key: JDBC_DRIVER
        - name: JDBC_URL
          valueFrom:
            secretKeyRef:
              name: amq-env-secrets
              key: JDBC_URL
        - name: JDBC_USER
          valueFrom:
            secretKeyRef:
              name: amq-env-secrets
              key: JDBC_USER
        - name: JDBC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: amq-env-secrets
              key: JDBC_PASSWORD
        - name: TLS_KS_PWD
          valueFrom:
            secretKeyRef:
              name: amq-env-secrets
              key: TLS_KS_PWD
        image: docker.io/tremolosecurity/activemq-docker
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - /usr/bin/health_check.sh
          failureThreshold: 10
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: openunison
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8443
          name: https
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /usr/bin/health_check.sh
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/activemq
          name: secret-volume
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
      - name: secret-volume
        secret:
          defaultMode: 420
          secretName: amq-secrets
---








apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: https
    nginx.ingress.kubernetes.io/secure-backends: "true"
    nginx.org/ssl-services: openunison
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/session-cookie-name: INGRESSCOOKIE
    nginx.ingress.kubernetes.io/session-cookie-hash: sha1
  name: openunison-ingress
  namespace: openunison
spec:
  rules:
  - host: #[OU_HOST]
    http:
      paths:
      - backend:
          serviceName: openunison
          servicePort: 443
        path: /
  - host: #[K8S_DASHBOARD_HOST]
    http:
      paths:
      - backend:
          serviceName: openunison
          servicePort: 443
        path: /
  tls:
  - hosts:
    - #[OU_HOST]
    - #[K8S_DASHBOARD_HOST]
    secretName: ou-tls-certificate
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: openunison
  name: openunison
  namespace: openunison
spec:
  ports:
  - name: openunison-secure
    port: 443
    protocol: TCP
    targetPort: 8443
  - name: openunison-insecure
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: openunison
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: openunison
  name: openunison
  namespace: openunison
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: openunison
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: openunison
    spec:
      containers:
      - env:
        - name: JAVA_OPTS
          value: -Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom
            -DunisonEnvironmentFile=/etc/openunison/ou.env
        - name: fortriggerupdates
          value: changeme
        - name: MYVD_CONFIG_PATH
          value: WEB-INF/myvd.conf
        image: docker.io/tremolosecurity/openunison-k8s-activedirectory
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - /usr/local/openunison/bin/check_alive.py
          failureThreshold: 10
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: openunison
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8443
          name: https
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /usr/local/openunison/bin/check_alive.py
            - https://127.0.0.1:8443/auth/idp/k8sIdp/.well-known/openid-configuration
            - issuer
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/openunison
          name: secret-volume
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      serviceAccount: openunison
      serviceAccountName: openunison
      volumes:
      - name: secret-volume
        secret:
          defaultMode: 420
          secretName: openunison-secrets